{"ast":null,"code":"import * as React from 'react';\nvar isActionSupported = function isActionSupported(element, method) {\n  return element ? !!element[method] : false;\n};\nexport var useEventListener = function useEventListener(options) {\n  var capture = options.capture,\n    listener = options.listener,\n    type = options.type,\n    target = options.target,\n    targetRef = options.targetRef;\n  var latestListener = React.useRef(listener);\n  latestListener.current = listener;\n  var eventHandler = React.useCallback(function (event) {\n    return latestListener.current(event);\n  }, []);\n  if (process.env.NODE_ENV !== 'production') {\n    // This is fine to violate there conditional rule as environment variables will never change during component\n    // lifecycle\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (typeof target !== 'undefined' && typeof targetRef !== 'undefined') {\n        throw new Error('`target` and `targetRef` props are mutually exclusive, please use one of them.');\n      }\n      if (typeof target === 'undefined' && typeof targetRef === 'undefined') {\n        throw new Error(\"`target` and `targetRef` props are `undefined`, it' required to use one of them.\");\n      }\n    }, [target, targetRef]);\n  }\n  React.useEffect(function () {\n    var element = typeof targetRef === 'undefined' ? target : targetRef.current; // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var conditionalHandler = function conditionalHandler(event) {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      eventHandler(event);\n    };\n    if (isActionSupported(element, 'addEventListener')) {\n      element.addEventListener(type, conditionalHandler, capture);\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `addEventListener()` method.');\n    }\n    return function () {\n      if (isActionSupported(element, 'removeEventListener')) {\n        element.removeEventListener(type, conditionalHandler, capture);\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error('@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `removeEventListener()` method.');\n      }\n    };\n  }, [capture, eventHandler, target, targetRef, type]);\n};","map":{"version":3,"names":["React","isActionSupported","element","method","useEventListener","options","capture","listener","type","target","targetRef","latestListener","useRef","current","eventHandler","useCallback","event","process","env","NODE_ENV","useEffect","Error","currentEvent","window","conditionalHandler","undefined","addEventListener","removeEventListener"],"sources":["/Users/tywayne/node_modules/@fluentui/react-component-event-listener/dist/es/useEventListener.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { EventHandler, EventListenerOptions, EventTypes, Target } from './types';\n\nconst isActionSupported = (\n  element: Target | null | undefined,\n  method: 'addEventListener' | 'removeEventListener',\n): element is Target => (element ? !!element[method] : false);\n\nexport const useEventListener = <T extends EventTypes>(options: EventListenerOptions<T>): void => {\n  const { capture, listener, type, target, targetRef } = options;\n\n  const latestListener = React.useRef<EventHandler<T>>(listener);\n  latestListener.current = listener;\n\n  const eventHandler = React.useCallback((event: DocumentEventMap[T]) => {\n    return latestListener.current(event);\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This is fine to violate there conditional rule as environment variables will never change during component\n    // lifecycle\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (typeof target !== 'undefined' && typeof targetRef !== 'undefined') {\n        throw new Error('`target` and `targetRef` props are mutually exclusive, please use one of them.');\n      }\n\n      if (typeof target === 'undefined' && typeof targetRef === 'undefined') {\n        throw new Error(\"`target` and `targetRef` props are `undefined`, it' required to use one of them.\");\n      }\n    }, [target, targetRef]);\n  }\n\n  React.useEffect(() => {\n    const element: Target | null | undefined = typeof targetRef === 'undefined' ? target : targetRef.current;\n\n    // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = window.event;\n\n    const conditionalHandler = (event: DocumentEventMap[T]) => {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      eventHandler(event);\n    };\n\n    if (isActionSupported(element, 'addEventListener')) {\n      element.addEventListener(type, conditionalHandler, capture);\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        '@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `addEventListener()` method.',\n      );\n    }\n\n    return () => {\n      if (isActionSupported(element, 'removeEventListener')) {\n        element.removeEventListener(type, conditionalHandler, capture);\n      } else if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          '@fluentui/react-component-event-listener: Passed `element` is not valid or does not support `removeEventListener()` method.',\n        );\n      }\n    };\n  }, [capture, eventHandler, target, targetRef, type]);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoBA,CACxBC,OADwB,EAExBC,MAFwB;EAAA,OAGDD,OAAO,GAAG,CAAC,CAACA,OAAO,CAACC,MAAD,CAAZ,GAAuB,KAH7B;AAAA,CAA1B;AAKA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmBA,CAAuBC,OAAvB,EAAkE;EAAA,IACxFC,OADwF,GACzCD,OADyC,CACxFC,OADwF;IAC/EC,QAD+E,GACzCF,OADyC,CAC/EE,QAD+E;IACrEC,IADqE,GACzCH,OADyC,CACrEG,IADqE;IAC/DC,MAD+D,GACzCJ,OADyC,CAC/DI,MAD+D;IACvDC,SADuD,GACzCL,OADyC,CACvDK,SADuD;EAGhG,IAAMC,cAAc,GAAGX,KAAK,CAACY,MAAN,CAA8BL,QAA9B,CAAvB;EACAI,cAAc,CAACE,OAAf,GAAyBN,QAAzB;EAEA,IAAMO,YAAY,GAAGd,KAAK,CAACe,WAAN,CAAkB,UAACC,KAAD,EAAgC;IACrE,OAAOL,cAAc,CAACE,OAAf,CAAuBG,KAAvB,CAAP;EACD,CAFoB,EAElB,EAFkB,CAArB;EAIA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC;IACA;IACA;IACAnB,KAAK,CAACoB,SAAN,CAAgB,YAAM;MACpB,IAAI,OAAOX,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,SAAP,KAAqB,WAA1D,EAAuE;QACrE,MAAM,IAAIW,KAAJ,CAAU,gFAAV,CAAN;MACD;MAED,IAAI,OAAOZ,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,SAAP,KAAqB,WAA1D,EAAuE;QACrE,MAAM,IAAIW,KAAJ,CAAU,kFAAV,CAAN;MACD;IACF,CARD,EAQG,CAACZ,MAAD,EAASC,SAAT,CARH;EASD;EAEDV,KAAK,CAACoB,SAAN,CAAgB,YAAM;IACpB,IAAMlB,OAAkC,GAAG,OAAOQ,SAAP,KAAqB,WAArB,GAAmCD,MAAnC,GAA4CC,SAAS,CAACG,OAAjG,CADoB,CAGpB;IACA;IACA;;IACA,IAAIS,YAAY,GAAGC,MAAM,CAACP,KAA1B;IAEA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqBA,CAACR,KAAD,EAAgC;MACzD;MACA,IAAIA,KAAK,KAAKM,YAAd,EAA4B;QAC1BA,YAAY,GAAGG,SAAf;QACA;MACD;MAEDX,YAAY,CAACE,KAAD,CAAZ;IACD,CARD;IAUA,IAAIf,iBAAiB,CAACC,OAAD,EAAU,kBAAV,CAArB,EAAoD;MAClDA,OAAO,CAACwB,gBAAR,CAAyBlB,IAAzB,EAA+BgB,kBAA/B,EAAmDlB,OAAnD;IACD,CAFD,MAEO,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MAChD,MAAM,IAAIE,KAAJ,CACJ,0HADI,CAAN;IAGD;IAED,OAAO,YAAM;MACX,IAAIpB,iBAAiB,CAACC,OAAD,EAAU,qBAAV,CAArB,EAAuD;QACrDA,OAAO,CAACyB,mBAAR,CAA4BnB,IAA5B,EAAkCgB,kBAAlC,EAAsDlB,OAAtD;MACD,CAFD,MAEO,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QAChD,MAAM,IAAIE,KAAJ,CACJ,6HADI,CAAN;MAGD;IACF,CARD;EASD,CAnCD,EAmCG,CAACf,OAAD,EAAUQ,YAAV,EAAwBL,MAAxB,EAAgCC,SAAhC,EAA2CF,IAA3C,CAnCH;AAoCD,CA7DM"},"metadata":{},"sourceType":"module","externalDependencies":[]}