{"ast":null,"code":"var _jsxFileName = \"/Users/tywayne/Desktop/reactdev/sms-frontend/frontend/src/pages/AddStudent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGlobalContext } from \"../context\";\nimport NavBar from \"../components/NavBar\";\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\nimport { Link } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport FirstStep from \"../components/forms/FirstStep\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useFormik } from \"formik\";\nimport { studentSchema } from \"../components/schemas\";\nimport { api } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddStudent = () => {\n  _s();\n  const {\n    active,\n    setActive,\n    setError,\n    setMessages,\n    smessages,\n    studentId,\n    firstname,\n    lastname,\n    middlename,\n    dob,\n    address,\n    setFirstName,\n    setLastName,\n    setAddress,\n    setMiddleName,\n    onChange,\n    setStudentId,\n    handleStudent,\n    phone,\n    setPhone,\n    roomNumber,\n    setRoomNumber,\n    toast,\n    toa\n  } = useGlobalContext();\n  const onSubmit = async values => {\n    const {\n      firstname,\n      lastname\n    } = values;\n    try {\n      const addstudent = await api.post(\"/create-student\", {\n        firstname,\n        lastname\n      });\n      if (addstudent.data.status.success = \"success\") {\n        nagivate(\"/dashboard\");\n        toast.success(\"The student was added to the database!\");\n      } else {\n        toast.error(\"Unable to add student\", toastData);\n      }\n    } catch (error) {\n      console.log(error.response.data.message);\n    }\n  };\n  const {\n    values,\n    handleBlur,\n    touched,\n    actions,\n    errors,\n    handleChange,\n    handleReset,\n    handleSubmit\n  } = useFormik({\n    initialValues: {\n      cluster: '',\n      studentid: '',\n      roomnumber: '',\n      firstname: '',\n      middlename: '',\n      lastname: '',\n      dob: '',\n      sex: '',\n      address: '',\n      address1: '',\n      parish: '',\n      phone: '',\n      email: '',\n      yearsinhall: '',\n      level: '',\n      major: '',\n      faculty: '',\n      year: '',\n      status: '',\n      newtohall: '',\n      territory: '',\n      skills: ''\n    },\n    validationSchema: studentSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(FirstStep, {\n      values: values,\n      handleBlur: handleBlur,\n      touched: touched,\n      actions: actions,\n      errors: errors,\n      handleChange: handleChange,\n      handleReset: handleReset,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n_s(AddStudent, \"23eMfRYSuNalcj+biqij55FmZSA=\", false, function () {\n  return [useGlobalContext, useFormik];\n});\n_c = AddStudent;\nexport default AddStudent;\nvar _c;\n$RefreshReg$(_c, \"AddStudent\");","map":{"version":3,"names":["React","useEffect","useState","useGlobalContext","NavBar","PhoneInput","Link","Title","FirstStep","Footer","useFormik","studentSchema","api","jsxDEV","_jsxDEV","Fragment","_Fragment","AddStudent","_s","active","setActive","setError","setMessages","smessages","studentId","firstname","lastname","middlename","dob","address","setFirstName","setLastName","setAddress","setMiddleName","onChange","setStudentId","handleStudent","phone","setPhone","roomNumber","setRoomNumber","toast","toa","onSubmit","values","addstudent","post","data","status","success","nagivate","error","toastData","console","log","response","message","handleBlur","touched","actions","errors","handleChange","handleReset","handleSubmit","initialValues","cluster","studentid","roomnumber","sex","address1","parish","email","yearsinhall","level","major","faculty","year","newtohall","territory","skills","validationSchema","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/tywayne/Desktop/reactdev/sms-frontend/frontend/src/pages/AddStudent.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {useGlobalContext} from \"../context\"\nimport NavBar from \"../components/NavBar\"\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport { Link } from \"react-router-dom\"\nimport Title from \"../components/Title\"\nimport FirstStep from \"../components/forms/FirstStep\"\nimport Footer from \"../components/Footer/Footer\"\nimport {useFormik} from \"formik\"\nimport { studentSchema } from \"../components/schemas\"\nimport { api } from \"../api/api\"\n\n\nconst AddStudent = () => {\n  const {\n    active,\n    setActive,\n    setError,\n    setMessages,\n    smessages,\n    studentId,\n    firstname,\n    lastname,\n    middlename,\n    dob,\n    address,\n    setFirstName,\n    setLastName,\n    setAddress,\n    setMiddleName,\n    onChange,\n    setStudentId,\n    handleStudent,\n    phone,\n    setPhone,\n    roomNumber,\n    setRoomNumber,toast,toa\n  } = useGlobalContext()\n\n  const onSubmit = async(values)=>{\n    const {firstname,lastname} = values\n    try {\n        const addstudent = await api.post(\"/create-student\",{firstname,lastname})\n        if(addstudent.data.status.success = \"success\"){\n        nagivate(\"/dashboard\")\n        toast.success(\"The student was added to the database!\")\n      }else{\n        toast.error(\"Unable to add student\",toastData)\n      } \n    } catch (error) {\n      console.log(error.response.data.message)\n    }\n      \n  }\n\n   const {values,handleBlur,touched,actions,errors,handleChange,handleReset,handleSubmit} = useFormik({\n    initialValues:{\n    \n    cluster: '',\n    studentid: '',\n    roomnumber: '',\n    firstname:'',\n    middlename:'',\n    lastname:'', \n    dob: '',\n    sex:'',\n    address:'', \n    address1:'', \n    parish:'' ,\n    phone: '',\n    email:'',\n    yearsinhall: '',\n    level:'',\n    major:'',\n    faculty: '',\n    year: '',\n    status: '',\n    newtohall: '',\n    territory: '',\n    skills: ''\n\n    },\n    validationSchema: studentSchema,\n    onSubmit,\n    })\n  return (\n    <>\n      <NavBar />\n     <Title title=\"Add Student\"/>\n      <FirstStep \n      values={values} \n      handleBlur={handleBlur}\n      touched ={touched}\n      actions ={actions}\n      errors = {errors}\n      handleChange = {handleChange}\n      handleReset = {handleReset}\n      handleSubmit = {handleSubmit}\n      />\n     <Footer/>\n    </>\n  )\n}\n\nexport default AddStudent\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}