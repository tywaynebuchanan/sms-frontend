{"ast":null,"code":"var _jsxFileName = \"/Users/tywayne/Desktop/reactdev/sms-frontend-final/src/pages/AddStudent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useGlobalContext } from \"../context\";\nimport NavBar from \"../components/NavBar\";\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\nimport { Link } from \"react-router-dom\";\nimport Title from \"../components/Title\";\nimport FirstStep from \"../components/forms/FirstStep\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useFormik } from \"formik\";\nimport { studentSchema } from \"../components/schemas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddStudent = () => {\n  _s();\n  const {\n    active,\n    setActive,\n    setError,\n    setMessages,\n    smessages,\n    studentId,\n    firstname,\n    lastname,\n    middlename,\n    dob,\n    address,\n    setFirstName,\n    setLastName,\n    setAddress,\n    setMiddleName,\n    onChange,\n    setStudentId,\n    handleStudent,\n    phone,\n    setPhone,\n    roomNumber,\n    setRoomNumber\n  } = useGlobalContext();\n  const {\n    values,\n    handleBlur,\n    touched,\n    actions,\n    errors,\n    handleChange,\n    handleReset,\n    handleSubmit\n  } = useFormik({\n    initialValues: {\n      cluster: yup.number().oneOf(cluster).required(\"A cluster is required\"),\n      studentid: yup.number().positive().min(5).max(10).required(\"Please enter a student Id\"),\n      roomnumber: yup.string().min(4).max(4).required(\"A room number is required\"),\n      firstname: yup.string().min(5).max(50).required(\"First name of the student is required\"),\n      middlename: yup.string().min(5).max(50),\n      lastname: yup.string().min(5).max(50).required(\"Last name is required\"),\n      dob: yup.date().default(() => new Date()),\n      sex: yup.string().required(\"Please enter a gender\").oneOf(gender),\n      address: yup.string().min(5).max(50),\n      address1: yup.string().min(5).max(50),\n      parish: yup.string().required(\"A parish is required\"),\n      phone: yup.string(),\n      email: yup.string().email().required(\"A email is required\"),\n      yearsinhall: yup.string().min(0).max(10).required(\"Number of years on hall is required\"),\n      level: yup.string().required(\"Please enter a level\").oneOf(schoollevel),\n      major: yup.string().required(\"A major is required\"),\n      faculty: yup.string().required(\"A faculty is required\"),\n      year: yup.string().required(\"Please enter the year of the student\"),\n      status: yup.string().oneOf(Status).required(\"Please enter the status of the student\"),\n      newtohall: yup.string().oneOf(NewtoHall).required(\"Please state if the student is new to the hall\"),\n      territory: yup.string().oneOf(Countries).required(\"Please enter the territory\")\n    },\n    validationSchema: studentSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      title: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(FirstStep, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n_s(AddStudent, \"lvGJVdGyHRYcMeabI1NNDLjZbUw=\", false, function () {\n  return [useGlobalContext, useFormik];\n});\n_c = AddStudent;\nexport default AddStudent;\nvar _c;\n$RefreshReg$(_c, \"AddStudent\");","map":{"version":3,"names":["React","useEffect","useState","useGlobalContext","NavBar","PhoneInput","Link","Title","FirstStep","Footer","useFormik","studentSchema","jsxDEV","_jsxDEV","Fragment","_Fragment","AddStudent","_s","active","setActive","setError","setMessages","smessages","studentId","firstname","lastname","middlename","dob","address","setFirstName","setLastName","setAddress","setMiddleName","onChange","setStudentId","handleStudent","phone","setPhone","roomNumber","setRoomNumber","values","handleBlur","touched","actions","errors","handleChange","handleReset","handleSubmit","initialValues","cluster","yup","number","oneOf","required","studentid","positive","min","max","roomnumber","string","date","default","Date","sex","gender","address1","parish","email","yearsinhall","level","schoollevel","major","faculty","year","status","Status","newtohall","NewtoHall","territory","Countries","validationSchema","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/tywayne/Desktop/reactdev/sms-frontend-final/src/pages/AddStudent.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {useGlobalContext} from \"../context\"\nimport NavBar from \"../components/NavBar\"\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport { Link } from \"react-router-dom\"\nimport Title from \"../components/Title\"\nimport FirstStep from \"../components/forms/FirstStep\"\nimport Footer from \"../components/Footer/Footer\"\nimport {useFormik} from \"formik\"\nimport { studentSchema } from \"../components/schemas\"\n\nconst AddStudent = () => {\n  const {\n    active,\n    setActive,\n    setError,\n    setMessages,\n    smessages,\n    studentId,\n    firstname,\n    lastname,\n    middlename,\n    dob,\n    address,\n    setFirstName,\n    setLastName,\n    setAddress,\n    setMiddleName,\n    onChange,\n    setStudentId,\n    handleStudent,\n    phone,\n    setPhone,\n    roomNumber,\n    setRoomNumber\n  } = useGlobalContext()\n\n   const {values,handleBlur,touched,actions,errors,handleChange,handleReset,handleSubmit} = useFormik({\n    initialValues:{\n     cluster: yup.number().oneOf(cluster).required(\"A cluster is required\"),\n    studentid: yup.number().positive().min(5).max(10).required(\"Please enter a student Id\"),\n    roomnumber: yup.string().min(4).max(4).required(\"A room number is required\"),\n    firstname: yup.string().min(5).max(50).required(\"First name of the student is required\"),\n    middlename: yup.string().min(5).max(50),\n    lastname: yup.string().min(5).max(50).required(\"Last name is required\"),\n    dob: yup.date().default(()=> new Date()),\n    sex:yup.string().required(\"Please enter a gender\").oneOf(gender),\n    address: yup.string().min(5).max(50),\n    address1: yup.string().min(5).max(50),\n    parish: yup.string().required(\"A parish is required\"),\n    phone: yup.string(),\n    email:yup.string().email().required(\"A email is required\"),\n    yearsinhall: yup.string().min(0).max(10).required(\"Number of years on hall is required\"),\n    level:yup.string().required(\"Please enter a level\").oneOf(schoollevel),\n    major:yup.string().required(\"A major is required\"),\n    faculty: yup.string().required(\"A faculty is required\"),\n    year: yup.string().required(\"Please enter the year of the student\"),\n    status: yup.string().oneOf(Status).required(\"Please enter the status of the student\"),\n    newtohall: yup.string().oneOf(NewtoHall).required(\"Please state if the student is new to the hall\"),\n    territory: yup.string().oneOf(Countries).required(\"Please enter the territory\") \n    },\n    validationSchema: studentSchema,\n    onSubmit,\n    })\n  return (\n    <>\n      <NavBar />\n     <Title title=\"Add Student\"/>\n     <FirstStep/>\n     <Footer/>\n    </>\n  )\n}\n\nexport default AddStudent\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}